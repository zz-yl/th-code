/**@file   motor_state_machine.h
* @brief   电机控制状态机
* @author  陈卓哲
* @date    2023/11/14
* @section
* -# 
*
* @version 1.00.0.0
**************************************************************************************************/

#ifndef MOTOR_STATE_MACHINE_H_
#define MOTOR_STATE_MACHINE_H_

/**************************************************************************************************
*                                      INCLUDE FILES
**************************************************************************************************/

#include "stdint.h"

/**************************************************************************************************
*                                      MACROS DEFINE
**************************************************************************************************/

/**
* @enum    sm_motor_state_t 
* @brief   电机状态机状态
*/
typedef enum
{
    MOTOR_STATE_NULL,      //无
    MOTOR_STATE_STOP,      //待机
    MOTOR_STATE_RUN,       //运行
    MOTOR_STATE_LOCKED,    //堵转
    MOTOR_STATE_RECOVER,   //堵转自恢复
    MOTOR_STATE_FAULT,     //故障
}sm_motor_state_t;

/**************************************************************************************************
*                                      DATA TYPES
**************************************************************************************************/

/**
* @enum    sm_motor_port_t 
* @brief   电机状态机接口
*/
typedef struct
{
	sm_motor_state_t cmd;    //状态指令
    sm_motor_state_t state;  //当前状态
}sm_motor_port_t;

/**************************************************************************************************
*                                      GLOBAL VARIABLES
**************************************************************************************************/

/**************************************************************************************************
*                                      FUNCTION PROTOTYPES
**************************************************************************************************/

void sm_motor_init(void);
void sm_motor_delete(void);
void sm_motor_run(void);
void sm_motor_toggle(sm_motor_state_t cmd);
sm_motor_state_t sm_motor_state(void);

#endif /* MOTOR_STATE_MACHINE_H_ */
