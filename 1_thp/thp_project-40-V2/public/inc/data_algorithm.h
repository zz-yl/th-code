/**@file   data_algorithm.h
* @brief   数据算法
* @author  陈卓哲
* @date    2023/11/10
* @section
* -# 
*
* @version 1.00.0.0
**************************************************************************************************/

#ifndef DATA_ALGORITHM_H_
#define DATA_ALGORITHM_H_

/**************************************************************************************************
*                                      INCLUDE FILES
**************************************************************************************************/

#include "data_queue.h"

/**************************************************************************************************
*                                      MACROS DEFINE
**************************************************************************************************/

#define DATA_MS_TO_S     (0.001f)
#define DATA_RPMS_TO_RPS (1000.0f)

/**
* @enum    interp_limit_t 
* @brief   插值表是否有边界限制
*/
typedef enum
{
    LIMIT_UEN,
    LIMIT_EN
}interp_limit_t;

/**************************************************************************************************
*                                      DATA TYPES
**************************************************************************************************/

/**************************************************************************************************
*                                      GLOBAL VARIABLES
**************************************************************************************************/

/**************************************************************************************************
*                                      FUNCTION PROTOTYPES
**************************************************************************************************/

/**
* @brief  内联函数,数据边界限制,限制data的上下限
*/
float limit(float data, float max, float min);
__inline float limit(float data, float max, float min)
{
    if(data > max)
    {
        data = max;
    }
    if(data < min)
    {
        data = min;
    }
    return data;
}

float filter_low_pass(float filter, float data, float per_now);
float interp_1d(float x0, const float *x_list, const float *y_list, uint16_t size, uint8_t limit);

#endif /* DATA_ALGORITHM_H_ */
