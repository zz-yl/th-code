/**@file   pid.h
* @brief   PID算法
* @author  陈卓哲
* @date    2023/9/5
* @section
* -# 
*
* @version 1.00.0.0
**************************************************************************************************/

#ifndef PID_H_
#define PID_H_

/**************************************************************************************************
*                                      INCLUDE FILES
**************************************************************************************************/

#include "math.h"
#include "stdio.h"

/**************************************************************************************************
*                                      MACROS DEFINE
**************************************************************************************************/

/**************************************************************************************************
*                                      DATA TYPES
**************************************************************************************************/

/**
* @struct  PID_DATA
* @brief   PID数据
*/
typedef struct
{
    float Err;      //< 本次误差
    float ErrLast;  //< 上次误差
    float Kp;       //< kp
    float Ki;       //< ki
    float Kd;       //< kd
    float SumE;     //< 误差积分
    float Out;      //< 输出

    const float ErrDead;    //< 误差死区
    const float SumELimit;  //< 误差积分边界
    const float OutLimit;   //< 输出边界
    const float OutDead;    //< 输出死区
}PID_DATA;

/**************************************************************************************************
*                                      GLOBAL VARIABLES
**************************************************************************************************/

/**************************************************************************************************
*                                      FUNCTION PROTOTYPES
**************************************************************************************************/

float PidControl(PID_DATA *pid, float target, float freedback);
float PiControl(PID_DATA *pid, float target, float freedback);
void PidClear(PID_DATA *pid);

#endif /* PID_H_ */
